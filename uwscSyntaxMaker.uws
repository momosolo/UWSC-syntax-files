option specialchar

//クラス名格納用ハッシュテーブル
public hashtbl classList = hash_sort

//強調文字列データ格納用ハッシュテーブル
public hashtbl syntaxData = hash_sort

//各クラス共通定義
call uwscLibrary\const.uws

//各クラスが記載されたファイル
call uwscEditorSetting\hidemaru.uws
call uwscEditorSetting\mery.uws
call uwscEditorSetting\noeditor.uws
call uwscEditorSetting\notepadplusplus.uws
call uwscEditorSetting\sakura.uws

//CSVファイル読み込み
readCSV

//全エディタのファイル生成
all.makeFile
///////////////////////////////////////////////////////////////////////////////
procedure readCSV
	csvFid = fopen("uwscSyntax.csv") // ヘルプから生成した構文情報CSVファイル
	for row = 2 to fget(csvFid, F_LINECOUNT)
		syntax = fget(csvFid, row, 1) // アルファベット順のキーに使用
		syntaxData[syntax] = fget(csvFid, row) // 各行ハッシュテーブルに格納
	next
	fclose(csvFid)
fend
///////////////////////////////////////////////////////////////////////////////
class all
	procedure makeFile
		for className in classList
			//各ディレクトリの生成
			makeDirectory(className)
			
			//各ファイルの生成
			evalCommandReplaceClassName("className.openFile()",  className)
			evalCommandReplaceClassName("className.putHeader()", className)
			evalCommandReplaceClassName("className.putBody()",	 className)
			evalCommandReplaceClassName("className.putFooter()", className)
			evalCommandReplaceClassName("className.closeFile()", className)
		next
	fend
	
	procedure makeDirectory(className)
		directory = evalCommandReplaceClassName("className.directory", className)
		doscmdStr = replace("mkdir directory", "directory", directory)
		doscmd(doscmdStr)
	fend
	
	function evalCommandReplaceClassName(command, className)
		evalStr = replace(command, "className", className)
		result = eval(evalStr)
	fend
endclass
///////////////////////////////////////////////////////////////////////////////